uint16_t Memory::read(uint8_t address){
    uint16_t lower8 =  MEM[address];
    uint16_t upper8 =  MEM[address + 1] << 8;

    return lower8 + upper8;
}

void Memory::write(uint8_t address, uint16_t value) {
    uint8_t lower8 = value & 0xff;
    uint8_t upper8 = value >> 8;

    MEM[address] = lower8;
    MEM[address + 1] = upper8;
}

uint16_t Memory::pop(){
    // return MEM[--SP];
    SP -= 2;
    return this->read(SP);
};

void Memory::push(uint16_t value){
    // MEM[SP++] = value;
    this->write(--SP, value);
    SP += 2;
};